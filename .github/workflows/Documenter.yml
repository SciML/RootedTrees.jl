name: Documentation

on:
  push:
    branches:
      - 'main'
    tags: '*'
    paths-ignore:
      - '.zenodo.json'
      - '.github/workflows/benchmark.yml'
      - '.github/workflows/ci.yml'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/TagBot.yml'
      - 'benchmark/**'
      - 'utils/**'
  pull_request:
    paths-ignore:
      - '.zenodo.json'
      - '.github/workflows/benchmark.yml'
      - '.github/workflows/ci.yml'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/TagBot.yml'
      - 'benchmark/**'
      - 'utils/**'
  workflow_dispatch:

# Cancel redundant CI tests automatically
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
          show-versioninfo: true
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
        env:
          PYTHON: ""
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        env:
          PYTHON: ""
      - name: Fix weird Conda.jl/PyCall.jl/SymPy.jl build error
        env:
          PYTHON: ""
        shell: julia --color=yes {0}
        run: |
          using Pkg
          Pkg.activate("docs")
          println("Try instantiating the docs environment")
          try
            Pkg.instantiate()
            println("Successfully instantiated the docs environment")
          catch e
            display(e)
          end
          println("Try building SymPy")
          try
            Pkg.build("SymPy")
            import SymPy
            println("Successfully built SymPy")
          catch e
            display(e)
          end
      - name: Build and deploy documentation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
          GKSwstype: "100" # https://discourse.julialang.org/t/generation-of-documentation-fails-qt-qpa-xcb-could-not-connect-to-display/60988
          PYTHON: ""
        run: julia --project=docs --color=yes docs/make.jl
